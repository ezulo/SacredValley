#1: Implement Event class
	SFML has an Events class, but we want an event type that pertains to this
	project and this project alone. Such events will be referred to as SacVal
	(Sacred Valley) events. Example events:
		* Input (keypress, down or up)
		* Collision of game objects with collision flag set
		* Time based events
		* Pushing / Pulling game states based on some condition
	Events will consist of a type enum and some metadata.

#2: Implement EventDispatcher class (boilerplate)
	Will consume SFML input events and transform them into SacVal events. Will
	propogate events to the Game class, which will then propogate it to the
	StateMgr class
	Don't be concerned with SFML event transformation if it becomes too
	taxing; move it to a later task.

#3: Implement DisplayModule class
	Will maintain and render a list of GameObject instances to be drawn on the
	game window. Will also be responsible for initializing and terminating the
	game window. Configuration (such as resolution, among other things) will
	need to be passed to it.
